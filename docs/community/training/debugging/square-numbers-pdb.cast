{"version": 2, "width": 80, "height": 24, "timestamp": 1724216836, "env": {"SHELL": "/bin/bash", "TERM": "xterm-256color"}}
[0.004525, "o", "\u001b[!p\u001b[?3;4l\u001b[4l\u001b>\u001b[?1049h\u001b[22;0;0t\u001b[4l\u001b[?1h\u001b=\u001b[0m\u001b(B\u001b[1;24r"]
[0.006047, "o", "\u001b[H\u001b[2J\u001b[H\u001b[2J\u001b[23B\u001b[7m                                                                                \u001b[H\u001b[27m\u001b[23B\u001b[7m                                                                                \u001b[H\u001b[27m\u001b[23B\u001b[7m                                                                                \u001b[H\u001b[27m\u001b[23B\u001b[7m                                                                                \u001b[H\u001b[27m\u001b[H\u001b[2J\u001b[23B\u001b[7m                                                                                \u001b[H\u001b[27m\u001b[23B\u001b[7m                                                                                \u001b[H\u001b[27m"]
[0.111888, "o", "\u001b[22;2t\u001b]2;(x1::debugging)\u0007\u001b[1m\u001b[32m(x1::debugging)\u001b[0m "]
[0.297472, "o", "p"]
[0.408534, "o", "y"]
[0.524753, "o", "t"]
[0.66504, "o", "h"]
[0.798985, "o", "o"]
[0.918783, "o", "n"]
[1.035745, "o", "3"]
[1.166345, "o", " "]
[1.275735, "o", "-"]
[1.4096, "o", "m"]
[1.556987, "o", " "]
[1.669553, "o", "p"]
[1.817613, "o", "d"]
[1.951816, "o", "b"]
[2.056371, "o", " "]
[2.179294, "o", "s"]
[2.32357, "o", "q"]
[2.458568, "o", "u"]
[2.575096, "o", "a"]
[2.712077, "o", "r"]
[2.823579, "o", "e"]
[2.927899, "o", "_"]
[3.035931, "o", "n"]
[3.153274, "o", "u"]
[3.276966, "o", "m"]
[3.390595, "o", "b"]
[3.531795, "o", "e"]
[3.641283, "o", "r"]
[3.748397, "o", "s"]
[3.853112, "o", "."]
[3.98345, "o", "p"]
[4.126279, "o", "y"]
[4.456845, "o", "\r\n"]
[4.494598, "o", "> debugging/square_numbers.py(2)<module>()\r\n-> \"\"\"\r\n(Pdb) "]
[4.7, "m", "Set a breakpoint"]
[5.452301, "o", "b"]
[5.595708, "o", "r"]
[5.742767, "o", "e"]
[5.870233, "o", "a"]
[6.017347, "o", "k"]
[6.14264, "o", " "]
[6.256639, "o", "1"]
[6.379398, "o", "6"]
[6.71338, "o", "\r\n"]
[6.713562, "o", "Breakpoint 1 at debugging/square_numbers.py:16\r\n(Pdb) "]
[7.745539, "o", "c"]
[7.85873, "o", "o"]
[7.976148, "o", "n"]
[8.090055, "o", "t"]
[8.207778, "o", "i"]
[8.308467, "o", "n"]
[8.440298, "o", "u"]
[8.554699, "o", "e"]
[8.85907, "o", "\r\n"]
[8.85921, "o", "> debugging/square_numbers.py(16)find_squares()\r\n-> if is_square(value):\r\n"]
[8.85924, "o", "(Pdb) "]
[9.081, "m", "Show current location"]
[9.745612, "o", "l"]
[9.860581, "o", "i"]
[9.983146, "o", "s"]
[10.090868, "o", "t"]
[11.203442, "o", "\r\n"]
[11.203536, "o", " 11     \r\n 12     def find_squares(lower_bound, upper_bound):\r\n 13         squares = []\r\n 14         value = lower_bound\r\n 15         while value <= upper_bound:\r\n 16 B->         if is_square(value):\r\n 17                 squares.append(value)\r\n 18             value += 1\r\n 19         return squares\r\n 20     \r\n 21     \r\u001b[1;23r\u001b[23;1H\n(Pdb) "]
[13.256525, "o", "p"]
[13.368927, "o", "r"]
[13.483868, "o", "i"]
[13.598561, "o", "n"]
[13.711684, "o", "t"]
[13.835765, "o", "("]
[13.946968, "o", "v"]
[14.071736, "o", "a"]
[14.184584, "o", "l"]
[14.326651, "o", "u"]
[14.435913, "o", "e"]
[14.579051, "o", ")"]
[15.689609, "o", "\r\n"]
[15.689692, "o", "1\b\n"]
[15.689811, "o", "(Pdb) "]
[16.146, "m", "Step into `is_square()`"]
[17.742407, "o", "s"]
[17.853405, "o", "t"]
[17.99157, "o", "e"]
[18.104392, "o", "p"]
[18.408988, "o", "\r\n"]
[18.409075, "o", "--Call--\r\n"]
[18.409113, "o", "> debugging/square_numbers.py(22)is_square()\r\n-> def is_square(value):\r\n"]
[18.409141, "o", "(Pdb) "]
[19.367903, "o", "s"]
[19.499585, "o", "t"]
[19.608708, "o", "e"]
[19.721867, "o", "p"]
[20.057163, "o", "\r\n"]
[20.057264, "o", "> debugging/square_numbers.py(23)is_square()\r\n-> for i in range(1, value + 1):\r\n"]
[20.057397, "o", "(Pdb) "]
[21.083079, "o", "l"]
[21.205252, "o", "i"]
[21.336407, "o", "s"]
[21.452416, "o", "t"]
[22.562739, "o", "\r\n"]
[22.56286, "o", " 18             value += 1\r\n 19         return squares\r\n 20     \r\n 21     \r\n 22     def is_square(value):\r\n 23  ->     for i in range(1, value + 1):\r\n 24             if i * i == value:\r\n 25                 return True\r\n 26         return False\r\n 27     \r\n "]
[22.562907, "o", "28     \r\n(Pdb) "]
[24.615103, "o", "u"]
[24.759021, "o", "p"]
[25.107984, "o", "\r\n"]
[25.108063, "o", "> debugging/square_numbers.py(16)find_squares()\r\n-> if is_square(value):\r\n(Pdb) "]
[26.034808, "o", "l"]
[26.149422, "o", "i"]
[26.298029, "o", "s"]
[26.400998, "o", "t"]
[27.523337, "o", "\r\n"]
[27.523401, "o", " 11     \r\n 12     def find_squares(lower_bound, upper_bound):\r\n 13         squares = []\r\n 14         value = lower_bound\r\n 15         while value <= upper_bound:\r\n 16 B->         if is_square(value):\r\n 17                 squares.append(value)\r\n 18             value += 1\r\n 19         return squares\r\n 20     \r\n 21     \r\n(Pdb) "]
[27.979, "o", "\u001b[s\u001b[24;1H\u001b[7m                       we can check the value of squares                        \u001b[m\u001b[u"]
[29.575679, "o", "p"]
[29.715048, "o", "r"]
[29.825091, "o", "i"]
[29.95373, "o", "n"]
[30.072316, "o", "t"]
[30.198288, "o", "("]
[30.315144, "o", "s"]
[30.429754, "o", "q"]
[30.54417, "o", "u"]
[30.648343, "o", "a"]
[30.772575, "o", "r"]
[30.916994, "o", "e"]
[31.064668, "o", "s"]
[31.166977, "o", ")"]
[31.513016, "o", "\r\n"]
[31.513096, "o", "[]\r\n"]
[31.513132, "o", "(Pdb) "]
[32.513611, "o", "d"]
[32.659259, "o", "o"]
[32.767921, "o", "w"]
[32.884711, "o", "n"]
[33.204342, "o", "\r\n"]
[33.204452, "o", "> debugging/square_numbers.py(23)is_square()\r\n-> for i in range(1, value + 1):\r\n(Pdb) "]
[33.44, "o", "\u001b[s\u001b[24;1H\u001b[7m                                                                                \u001b[m\u001b[u"]
[34.15866, "o", "s"]
[34.259468, "o", "t"]
[34.380843, "o", "e"]
[34.525734, "o", "p"]
[34.830548, "o", "\r\n> debugging/square_numbers.py(24)is_square()\r\n-> if i * i == value:\r\n(Pdb) "]
[35.777766, "o", "s"]
[35.916978, "o", "t"]
[36.065687, "o", "e"]
[36.201439, "o", "p"]
[36.51544, "o", "\r\n"]
[36.515526, "o", "> debugging/square_numbers.py(25)is_square()\r\n-> return True\r\n"]
[36.515557, "o", "(Pdb) "]
[36.744, "m", "Return from `is_square()`"]
[37.43589, "o", "s"]
[37.574683, "o", "t"]
[37.708649, "o", "e"]
[37.857879, "o", "p"]
[38.201763, "o", "\r\n"]
[38.20196, "o", "--Return--\r\n> debugging/square_numbers.py(25)is_square()->True\r\n-> return True\r\n(Pdb) "]
[39.111629, "o", "s"]
[39.254985, "o", "t"]
[39.385075, "o", "e"]
[39.502855, "o", "p"]
[39.806283, "o", "\r\n"]
[39.806416, "o", "> debugging/square_numbers.py(17)find_squares()\r\n-> squares.append(value)\r\n(Pdb) "]
[40.021, "m", "Show updated `squares` list"]
[40.657363, "o", "p"]
[40.762232, "o", "r"]
[40.912148, "o", "i"]
[41.051649, "o", "n"]
[41.195581, "o", "t"]
[41.319649, "o", "("]
[41.428762, "o", "s"]
[41.55563, "o", "q"]
[41.676762, "o", "u"]
[41.785445, "o", "a"]
[41.893803, "o", "r"]
[42.00703, "o", "e"]
[42.154767, "o", "s"]
[42.304376, "o", ")"]
[42.640528, "o", "\r\n[]\r\n"]
[42.640681, "o", "(Pdb) "]
[43.63773, "o", "s"]
[43.764392, "o", "t"]
[43.87365, "o", "e"]
[44.017718, "o", "p"]
[44.362371, "o", "\r\n"]
[44.362648, "o", "> debugging/square_numbers.py(18)find_squares()\r\n-> value += 1\r\n(Pdb) "]
[45.399711, "o", "p"]
[45.549327, "o", "r"]
[45.674679, "o", "i"]
[45.812784, "o", "n"]
[45.943807, "o", "t"]
[46.049968, "o", "("]
[46.166126, "o", "s"]
[46.269687, "o", "q"]
[46.414211, "o", "u"]
[46.515515, "o", "a"]
[46.642921, "o", "r"]
[46.751832, "o", "e"]
[46.859613, "o", "s"]
[46.967873, "o", ")"]
[47.312719, "o", "\r\n"]
[47.312858, "o", "[1]\r\n(Pdb) "]
[47.541, "o", "\u001b[s\u001b[24;1H\u001b[7m                       the value of squares has changed!                        \u001b[m\u001b[u"]
[48.231614, "o", "s"]
[48.382485, "o", "t"]
[48.509991, "o", "e"]
[48.625551, "o", "p"]
[48.944535, "o", "\r\n"]
[48.944639, "o", "> debugging/square_numbers.py(15)find_squares()\r\n-> while value <= upper_bound:\r\n"]
[48.944703, "o", "(Pdb) "]
[49.819614, "o", "s"]
[49.957695, "o", "t"]
[50.102433, "o", "e"]
[50.226523, "o", "p"]
[50.548852, "o", "\r\n"]
[50.548947, "o", "> debugging/square_numbers.py(16)find_squares()\r\n-> if is_square(value):\r\n(Pdb) "]
[51.484711, "o", "n"]
[51.623307, "o", "e"]
[51.743909, "o", "x"]
[51.875723, "o", "t"]
[52.178744, "o", "\r\n> debugging/square_numbers.py(18)find_squares()\r\n-> value += 1\r\n(Pdb) "]
[52.402, "o", "\u001b[s\u001b[24;1H\u001b[7m                                                                                \u001b[m\u001b[u"]
[53.071081, "o", "p"]
[53.219911, "o", "r"]
[53.322578, "o", "i"]
[53.433516, "o", "n"]
[53.535592, "o", "t"]
[53.668051, "o", "("]
[53.800433, "o", "v"]
[53.91804, "o", "a"]
[54.02024, "o", "l"]
[54.142308, "o", "u"]
[54.251735, "o", "e"]
[54.37299, "o", ")"]
[54.692186, "o", "\r\n"]
[54.692295, "o", "2\b\n"]
[54.692321, "o", "(Pdb) "]
[55.711625, "o", "p"]
[55.846289, "o", "r"]
[55.97021, "o", "i"]
[56.0905, "o", "n"]
[56.196059, "o", "t"]
[56.326526, "o", "("]
[56.451928, "o", "s"]
[56.597488, "o", "q"]
[56.746219, "o", "u"]
[56.887395, "o", "a"]
[57.030623, "o", "r"]
[57.155689, "o", "e"]
[57.275173, "o", "s"]
[57.398813, "o", ")"]
[57.726129, "o", "\r\n"]
[57.726207, "o", "[1]\r\n(Pdb) "]
[57.947, "o", "\u001b[s\u001b[24;1H\u001b[7m                     the value of squares has not changed!                      \u001b[m\u001b[u"]
[57.947, "m", "Add a conditional breakpoint"]
[58.607099, "o", "c"]
[58.737681, "o", "l"]
[58.883347, "o", "e"]
[58.994825, "o", "a"]
[59.109159, "o", "r"]
[59.251787, "o", " "]
[59.384621, "o", "1"]
[60.534392, "o", "\r\n"]
[60.534425, "o", "Deleted breakpoint 1 at debugging/square_numbers.py:16\r\n(Pdb) "]
[62.586635, "o", "b"]
[62.728743, "o", "r"]
[62.863095, "o", "e"]
[62.972939, "o", "a"]
[63.083646, "o", "k"]
[63.227127, "o", " "]
[63.344054, "o", "1"]
[63.478808, "o", "8"]
[63.600774, "o", ","]
[63.724199, "o", " "]
[63.824876, "o", "v"]
[63.966245, "o", "a"]
[64.082401, "o", "l"]
[64.199346, "o", "u"]
[64.303515, "o", "e"]
[64.435082, "o", " "]
[64.574237, "o", "="]
[64.700165, "o", "="]
[64.824254, "o", " "]
[64.963366, "o", "4"]
[65.06824, "o", "9"]
[66.196277, "o", "\r\nBreakpoint 2 at debugging/square_numbers.py:18\r\n"]
[66.196373, "o", "(Pdb) "]
[66.652, "o", "\u001b[s\u001b[24;1H\u001b[7m                                                                                \u001b[m\u001b[u"]
[68.248328, "o", "c"]
[68.392739, "o", "o"]
[68.516071, "o", "n"]
[68.621905, "o", "t"]
[68.771138, "o", "i"]
[68.894353, "o", "n"]
[69.031926, "o", "u"]
[69.136275, "o", "e"]
[69.477046, "o", "\r\n"]
[69.479688, "o", "> debugging/square_numbers.py(18)find_squares()\r\n-> value += 1\r\n(Pdb) "]
[69.697, "m", "Stop at the conditional breakpoint"]
[70.352751, "o", "p"]
[70.466919, "o", "r"]
[70.588438, "o", "i"]
[70.713067, "o", "n"]
[70.835375, "o", "t"]
[70.937003, "o", "("]
[71.067244, "o", "v"]
[71.204682, "o", "a"]
[71.354011, "o", "l"]
[71.48225, "o", "u"]
[71.628841, "o", "e"]
[71.77667, "o", ")"]
[72.08829, "o", "\r\n"]
[72.088374, "o", "49\r\n(Pdb) "]
[72.972917, "o", "p"]
[73.11125, "o", "r"]
[73.224163, "o", "i"]
[73.330112, "o", "n"]
[73.477669, "o", "t"]
[73.612016, "o", "("]
[73.76012, "o", "s"]
[73.876853, "o", "q"]
[73.987119, "o", "u"]
[74.094043, "o", "a"]
[74.241785, "o", "r"]
[74.350153, "o", "e"]
[74.490289, "o", "s"]
[74.601531, "o", ")"]
[75.745992, "o", "\r\n"]
[75.746119, "o", "[1, 4, 9, 16, 25, 36, 49]\r\n(Pdb) "]
[76.202, "m", "Continue until the script ends"]
[77.798742, "o", "c"]
[77.919531, "o", "o"]
[78.069038, "o", "n"]
[78.214485, "o", "t"]
[78.333852, "o", "i"]
[78.455246, "o", "n"]
[78.591434, "o", "u"]
[78.723284, "o", "e"]
[79.86969, "o", "\r\n"]
[79.87667, "o", "[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\r\nThe program finished and will be restarted\r\n"]
[79.876846, "o", "> debugging/square_numbers.py(2)<module>()\r\n-> \"\"\"\r\n(Pdb) "]
[81.921356, "o", "q"]
[82.066705, "o", "u"]
[82.183706, "o", "i"]
[82.302386, "o", "t"]
[83.421588, "o", "\r\n"]
[83.453566, "o", "\u001b[1m\u001b[32m(x1::debugging)\u001b[0m "]
